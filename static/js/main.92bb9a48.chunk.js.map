{"version":3,"sources":["Util.tsx","ServerHandler.tsx","ConsoleInput.tsx","HistoryElement.tsx","HistoryView.tsx","ShareButton.tsx","InternalsButton.tsx","Window.tsx","Desktop.tsx","Intro.tsx","App.tsx","index.tsx"],"names":["json_stringify_circular","obj","stringify","json_parse_circular","parse","removeItemAll","arr","value","i","length","splice","interfaceRoot","parent","children","id","depth","methods","interfaceGetGlobalId","ctx","ret","cur","push","interfaceGetRelativeId","base","child","skipCheck","baseCur","setInterface","name","handler","mctx","console","log","subscribeInterface","me","old","unsubscribeInterface","getInterfaces","target","undefined","args","found","Array","Error","Object","keys","getInterface","f","all","first","stageInterface","serializeRecursive","ictx","serialize","lock","myself","allStates","serialized","response","range","start","stop","step","result","zip","a","b","arrays","map","_","array","getLocationQueryArg","arg","URLSearchParams","window","location","search","get","isInternal","line","includes","SERVER_ADDRESS","eval","serverHandlerSend","request","callback","encoded","encodeURIComponent","fetch","then","text","lines","split","decorated","trim","startsWith","substring","filter","isResponse","isFinal","nonEmpty","last","serverHandlerShare","state","s","key","md5","method","redirect","mode","headers","body","loc","open","origin","pathname","serverHandlerLoad","Promise","resolve","reject","callback_text","serverHandlerInit","ConsoleInput","styles","width","paddingLeft","immediateValue","updateValue","onChangeHandler","onResponseHandler","onSubmitHandler","historyAddResponse","setState","e","preventDefault","action","onSubmit","this","type","style","onChange","Component","HistoryElement","mounted","isMinimal","elem","deserialize","wrapSetState","setVisibility","isString","backgroundColor","border","tabIndex","readOnly","modifier","hide","getVisibilityMode","Fragment","HistoryView","loadId","messagesEnd","scrollToBottom","smooth","beh","scrollIntoView","behavior","hist","outputs","indexes","x","maped","float","clear","ref","el","ShareButton","onClick","share","serializeWindow","st","className","InternalsButton","nextStateText","cycleState","updateHists","newState","makeButton","Window","margin","textAlign","height","historyStyles","overflow","overflowY","count","serializedState","horizontalStyle","normalStyle","onCloneClick","onCloseClick","horizontal","addWindow","removeWindow","serializeThis","role","Desktop","display","windows","initWindow","showIntro","parentCount","windowSerializedState","newWindows","win","w","repeat","update","load","finish_init","Intro","examples","mapped","startAsVisible","visible","visibility","q","src","alt","href","App","props","innerStyles","marginTop","marginBottom","marginLeft","marginRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92bb9a48.chunk.js","sourcesContent":["\nimport { parse, stringify } from 'flatted';\n\nexport function json_stringify_circular(obj) {\n    return stringify(obj);\n}\n\nexport function json_parse_circular(obj) {\n    return parse(obj);\n}\n\nfunction removeItemAll(arr, value) {\n    var i = 0;\n    while (i < arr.length) {\n        if(arr[i] === value) {\n            arr.splice(i, 1);\n        } else {\n            ++i;\n        }\n    }\n    return arr;\n}\n\nconst interfaceRoot = {\n    parent: null,\n    children: [],\n    id: 0,\n    depth: 0,\n    methods: {},\n};\n\nexport function interfaceGetGlobalId(ctx) {\n    const ret = [];\n    for (var cur = ctx; cur; cur = cur.parent) {\n        ret.push(cur.id);\n    }\n    return ret;\n}\n\nexport function interfaceGetRelativeId(base, child?, skipCheck?) {\n    const ret = [];\n    var cur = child;\n    var baseCur = base;\n\n    if (base === undefined) {\n        debugger;\n    }\n\n    while (cur && cur.depth !== base.depth) {\n        ret.push(cur.id);\n        cur = cur.parent;\n    }\n\n    if (!skipCheck) {\n        while (cur) {\n            if (cur.id !== baseCur.id) {\n                return interfaceGetGlobalId(child);\n            }\n            baseCur = baseCur.parent;\n            cur = cur.parent;\n        }\n    }\n\n    return ret;\n}\n\nexport function setInterface(name, handler, mctx?) {\n    const ctx = mctx || interfaceRoot\n    console.log('setting', name, 'to interace', mctx, 'that is', ctx);\n    for (var cur = ctx; cur; cur = cur.parent) {\n        cur.methods[name] = [];\n    }\n    subscribeInterface(name, handler, mctx);\n}\n\nexport function subscribeInterface(name, handler, mctx?) {\n    const ctx = mctx || interfaceRoot\n    const me = [mctx, handler];\n    for (var cur = ctx; cur; cur = cur.parent) {\n        var old = cur.methods[name];\n        if (old) {\n            old.push(me);\n        } else {\n            cur.methods[name] = [me];\n        }\n    }\n}\n\nexport function unsubscribeInterface(name, handler, mctx?) {\n    const ctx = mctx || interfaceRoot;\n    const me = [mctx, handler];\n\n    console.log('unsubscribing', name, 'from interace', mctx, 'that is', ctx);\n    for (var cur = ctx; cur; cur = cur.parent) {\n        const old = cur.methods[name];\n        if (old) {\n            removeItemAll(old, me);\n        }\n    }\n    // else: not subscribed. That's fine\n}\n\nexport function getInterfaces(name, mctx, skipCheck) {\n    var ctx = mctx || interfaceRoot;\n    var target = undefined;\n    return function(...args) {\n        if (target === undefined) {\n            for (var cur = ctx; cur; cur = cur.parent) {\n                const found = cur.methods[name];\n                if (found) {\n                    target = function (...args) {\n                        const ret = new Array(found.length);\n                        for (var i = 0; i < found.length; i++) {\n                            const [id, handler] = found[i];\n                            ret[i] = [id, handler(...args)];\n                        }\n                        return ret;\n                    }\n                    return target(...args, mctx);\n                }\n            }\n            if (skipCheck) {\n                return undefined;\n            } else {\n                throw new Error('wrong interface name \"' + name + '\", existing interfaces: [' + Object.keys(ctx.methods) + ']');\n            }\n        }\n        return target(...args, mctx);\n    };\n}\n\nexport function getInterface(name, mctx?) {\n    const f = getInterfaces(name, mctx, false);\n    return function(...args) {\n        const all = f(...args);\n        const first = all[0];\n        const ret = first[1];\n        return ret;\n    };\n}\n\nexport function stageInterface(mctx) {\n    var ctx = mctx || interfaceRoot;\n    const id = ctx.children.length;\n    const depth = 1 + ctx.depth;\n    const me = {\n        parent: ctx,\n        children: [],\n        id: id,\n        depth: depth,\n        methods: {},\n    };\n    ctx.children.push(me);\n    return me;\n}\n\nexport function serializeRecursive(ictx, serialize) {\n    var lock = false;\n    function myself() { return lock; }\n\n    return function() {\n        if (lock) { return myself; }\n        lock = true;\n        const allStates = serialize();\n        lock = false;\n        const serialized = {};\n        for (var i = 0; i < allStates.length; i++) {\n            const [ctx, response] = allStates[i];\n            if (response !== myself) {\n                const id: any = interfaceGetRelativeId(ictx, ctx);\n                serialized[id] = response;\n            }\n        }\n        return serialized;\n    };\n}\n\nexport function range(start, stop?, step?) {\n    if (typeof stop == 'undefined') {\n        // one param defined\n        stop = start;\n        start = 0;\n    }\n\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n\n    var result = [];\n    for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n\n    return result;\n}\n\nexport function zipMany(arrays) {\n    return arrays[0].map(function(_,i){\n        return arrays.map(function(array){return array[i]})\n    });\n}\n\nexport function zip(a, b) {\n    return zipMany([a, b]);\n}\n\nexport function getLocationQueryArg(arg) {\n    return new URLSearchParams(window.location.search).get(arg);\n}\n\n","\nimport * as md5 from 'md5';\nimport { setInterface, json_stringify_circular, json_parse_circular } from './Util';\n\nfunction isInternal(line) {\n    return line.includes('$');\n}\n\nconst SERVER_ADDRESS = eval('SERVER_ADDRESS_REMOTE');\n\nfunction serverHandlerSend(request, callback) {\n    const encoded = encodeURIComponent(request);\n    fetch(SERVER_ADDRESS + '/calc/' + encoded).then(response => {\n        response.text().then(text => {\n            const lines = text.split('\\n');\n            const maped = lines.map(line => line.trim()).map(line => line.startsWith('->') ? line.substring(2).trim() : '');\n            const filtered = maped.filter(line => line !== '');\n            const decorated = filtered.map(line =>\n                ({ text: line,\n                   isResponse: true,\n                   isInternal: isInternal(line),\n                   isFinal: false,\n                 }));\n            if (decorated.length === 0) {\n                const nonEmpty = lines.filter(line => line !== '');\n                decorated.push({ text: nonEmpty[nonEmpty.length - 1], isResponse: true, isFinal: true, isInternal: false });\n            } else {\n                const last = decorated[decorated.length - 1];\n                last.isFinal = true;\n                last.isInternal = false;\n            }\n\n            const original = { text: request, isResponse: false };\n            const ret = [original, ...decorated];\n            callback(ret);\n        });\n    });\n}\n\nconst serverHandlerShare = (function () {\n    return function (state) {\n        const s = json_stringify_circular(state);\n        const f: any = md5;\n        const key = f(s);\n        const parameters = {\n            method: 'POST',\n            redirect: 'follow',\n            mode: 'no-cors',\n            headers: {\n                \"Content-Type\": \"plain/text\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n            body: s,\n        };\n\n        function callback(response) {\n            const loc = window.location;\n            window.open(loc.origin + loc.pathname + '?load=' + key);\n            console.log('response:', response);\n        }\n\n        fetch(SERVER_ADDRESS + '/share/' + key, parameters as any).then(callback)\n\n        return s;\n    }\n}());\n\nfunction serverHandlerLoad(key) {\n    function cbacked(resolve, reject) {\n        function callback_text(text) {\n            const obj = json_parse_circular(text);\n            resolve(obj);\n        }\n        function callback(response) {\n            response.text().then(callback_text);\n        }\n\n        fetch(SERVER_ADDRESS + '/load/' + key).then(callback);\n    }\n\n    return new Promise(cbacked);\n}\n\nexport function serverHandlerInit() {\n    setInterface('server-calc', serverHandlerSend);\n    setInterface('share', serverHandlerShare);\n    setInterface('load', serverHandlerLoad);\n}\n\n","import React, { Component } from 'react';\nimport { getInterface } from './Util';\n\ntype ConsoleInputProps = {\n    ictx : any;\n};\n\ntype ConsoleInputState = {\n    value : string;\n};\n\nclass ConsoleInput extends Component<ConsoleInputProps, ConsoleInputState> {\n\n    styles = {\n        width: '100%',\n        paddingLeft: '5px',\n    };\n\n    immediateValue;\n    updateValue;\n    onChangeHandler;\n    onResponseHandler;\n    onSubmitHandler;\n\n    constructor(args) {\n        super(args);\n\n        this.immediateValue = '';\n        this.state = {value: this.immediateValue};\n\n        const historyAddResponse = getInterface('history-add-response', args.ictx);\n        const serverHandlerSend = getInterface('server-calc', args.ictx);\n\n        this.updateValue = (value) => {\n            this.immediateValue = value;\n            this.setState({value: value});\n        };\n\n        this.onChangeHandler = (e) => {\n            const value = e.target.value;\n            this.updateValue(value);\n        };\n\n        this.onResponseHandler = (response) => {\n            historyAddResponse(response);\n        }\n\n        this.onSubmitHandler = (e) => {\n            e.preventDefault();\n            console.log('submitting', this.immediateValue);\n            serverHandlerSend(this.immediateValue, this.onResponseHandler);\n            this.updateValue(\"\");\n        };\n    }\n\n    render() {\n        return (<div>\n            <form action='#' onSubmit={this.onSubmitHandler}>\n                <input key='ConsoleInput'\n                       type='text'\n                       style={this.styles}\n                       value={this.state.value}\n                       onChange={this.onChangeHandler}>\n                </input>\n            </form>\n        </div>);\n    }\n}\n\nexport default ConsoleInput;\n","import React, { Component } from 'react';\nimport { getInterface, subscribeInterface, unsubscribeInterface } from './Util';\n\ntype Props = {\n    ictx : any;\n    elem : any;\n    id : any;\n};\n\ntype State = {\n    hide : boolean;\n};\n\nclass HistoryElement extends Component<Props, State> {\n\n    ictx : any;\n    id : any;\n    mounted : boolean;\n    isInternal : boolean;\n    isMinimal : boolean;\n    text : string;\n    style : React.CSSProperties;\n    elem : any;\n    serialize : any;\n    deserialize : any;\n    wrapSetState : any;\n    setVisibility : any;\n\n    constructor(args) {\n        super(args);\n\n        this.ictx = args.ictx;\n        this.id = args.id;\n        this.mounted = false;\n\n        const elem = args.elem;\n        const isString = typeof elem == 'string';\n        const isResponse = isString ? false : elem.isResponse;\n        this.isInternal = elem.isInternal;\n        this.isMinimal = elem.isFinal || !elem.isResponse;\n        this.text = isString ? elem : elem.text;\n\n        this.style = isResponse ? { backgroundColor: '#61dafb', border: '1px solid #61dafb' } : { backgroundColor: 'white' };\n        this.style.width = '100%';\n        this.style.paddingLeft = '5px';\n\n        this.elem = (<input tabIndex={-1}\n                            readOnly={true}\n                            value={this.text}\n                            style={this.style}\n                     />);\n\n        this.serialize = () => {\n            return this.state;\n        };\n\n        const deserialize = getInterface('deserialize-state', this.ictx);\n        this.state = deserialize();\n        subscribeInterface('serialize-state',\n                           this.serialize,\n                           this.ictx);\n\n        this.wrapSetState = (modifier) => {\n            if (this.mounted) {\n                this.setState(modifier);\n            } else {\n                this.state = modifier(this.state);\n            }\n        };\n\n        this.setVisibility = (mode) => {\n            // console.log(\"my visib:\", this.state.hide); // DEBUG\n            switch (mode) {\n            case 'Minimal':\n                return this.wrapSetState((state) => ({ hide: !this.isMinimal }));\n            case 'Internals':\n                return this.wrapSetState((state) => ({ hide: this.isInternal }));\n            case 'Internals*':\n                return this.wrapSetState((state) => ({ hide: false }));\n            default:\n                throw new Error(\"Unknown visibility mode: \" + mode);\n            }\n        };\n        subscribeInterface('history-update', this.setVisibility, this.ictx);\n\n        const getVisibilityMode = getInterface('get-visibility-mode', this.ictx);\n        if (!this.state) {\n            const mode = getVisibilityMode();\n            // console.log('setting visib to:', mode);\n            this.setVisibility(mode);\n        }\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        unsubscribeInterface('history-update', this.setVisibility, this.ictx);\n        unsubscribeInterface('serialize-state', this.serialize, this.ictx);\n    }\n\n    render() {\n        var elem;\n\n        if (this.state.hide) {\n            elem = null;\n        } else {\n            elem = this.elem;\n        }\n\n        return (<React.Fragment>{elem}</React.Fragment>);\n    }\n}\n\nexport default HistoryElement;\n","import React, { Component } from 'react';\nimport { stageInterface, setInterface, getInterface, subscribeInterface, zip, range } from './Util';\nimport HistoryElement from './HistoryElement';\n\ntype Props = {\n    ictx : any;\n    id : any;\n};\n\ntype State = {\n    hist : Array<any>;\n};\n\nclass HistoryView extends Component<Props, State> {\n\n    ictx : any;\n    id : any;\n    loadId : any;\n    serialize : any;\n    messagesEnd : any;\n\n    constructor(args) {\n        super(args);\n        this.ictx = args.ictx;\n        this.id = args.id;\n        this.loadId = args.loadId;\n\n        this.serialize = () => this.state;\n\n        const deserialize = getInterface('deserialize-state', this.ictx);\n        this.state = deserialize() || { hist: [] };\n        subscribeInterface('serialize-state',\n                           this.serialize,\n                           this.ictx);\n\n        const addItem = (outputs) => {\n            this.setState(state => ({hist: [...state.hist, ...outputs]}));\n        }\n        setInterface('history-add-response', addItem, this.ictx);\n    }\n\n    scrollToBottom = (smooth) => {\n        const beh = smooth ? \"smooth\" : \"auto\";\n        this.messagesEnd.scrollIntoView({ behavior: beh });\n    }\n    componentDidUpdate() {\n        this.scrollToBottom(true);\n    }\n    componentDidMount() {\n        this.scrollToBottom(false);\n    }\n\n    render() {\n        const hist = this.state.hist;\n        const indexes = range(hist.length).map(x => this.id + 'historyElement#' + x)\n        const ziped = zip(hist, indexes);\n        const maped = ziped.map(x => <HistoryElement ictx={stageInterface(this.ictx)} elem={x[0]} id={x[1]} key={x[1]} />)\n        return (<div>\n                    {maped}\n                <div style={{ float:\"left\", clear: \"both\" }}\n                     ref={(el) => { this.messagesEnd = el; }}>\n                </div>\n                </div>);\n    }\n}\n\nexport default HistoryView;\n","import React, { Component } from 'react';\nimport { getInterface } from './Util';\n\ntype Props = {\n    ictx : any;\n};\n\ntype State = {\n    text : string;\n};\n\nclass ShareButton extends Component<Props, State> {\n\n    ictx : unknown;\n    onClick : (e: any) => any;\n\n    constructor(args) {\n        super(args);\n\n        this.ictx = args.ictx;\n        this.state = null;\n\n        const share = getInterface('share');\n        const serializeWindow = getInterface('serialize-window', this.ictx);\n\n        this.onClick = (e) => {\n            const st = serializeWindow();\n            share(st);\n        };\n    }\n\n    render() {\n        return (<button className=\"btn btn-primary\"\n                        tabIndex={-1}\n                        onClick={this.onClick} >\n                    Share\n                </button>);\n    }\n}\n\nexport default ShareButton;\n\n\n","import React, { Component } from 'react';\nimport { subscribeInterface, getInterface, getInterfaces, setInterface } from './Util';\n\ntype Props = {\n    ictx : any;\n    id : any;\n};\n\ntype State = {\n    text : string;\n};\n\nclass InternalsButton extends Component<Props, State> {\n\n    ictx : any;\n    id : any;\n    serialize : any;\n    nextStateText : (s : string) => string;\n    cycleState : (s : State) => State;\n    getVisibilityMode : () => string;\n    onClick : any;\n\n    constructor(args) {\n        super(args);\n\n        this.ictx = args.ictx;\n        this.id = args.id;\n\n        this.serialize = () => {\n            return this.state;\n        };\n\n        const deserialize = getInterface('deserialize-state', this.ictx);\n        this.state = deserialize() || { text: 'Minimal' };\n        subscribeInterface('serialize-state',\n                           this.serialize,\n                           this.ictx);\n\n        this.nextStateText = (text) => {\n            switch (text) {\n            case 'Minimal': return 'Internals';\n            case 'Internals': return 'Internals*';\n            case 'Internals*': return 'Minimal';\n            default: throw new Error(\"Unknonw state: \" + text);\n            }\n        }\n        this.cycleState = (state) => {\n            return {...state, text: this.nextStateText(state.text)};\n        };\n\n        this.getVisibilityMode = () => {\n            return this.state.text;\n        };\n        setInterface('get-visibility-mode', this.getVisibilityMode, this.ictx);\n\n        const updateHists = getInterfaces('history-update', this.ictx, true);\n        this.onClick = (e) => {\n            this.setState((state) => {\n                const newState = this.cycleState(state);\n                updateHists(newState.text);\n                return newState;\n            });\n        };\n    }\n\n    render() {\n        return (<button\n                    className=\"btn btn-primary\"\n                    tabIndex={-1}\n                    onClick={this.onClick}>\n                    {this.nextStateText(this.state.text)}\n                </button>);\n    }\n}\n\nexport default InternalsButton;\n","import React, { Component } from 'react';\nimport ConsoleInput from './ConsoleInput';\nimport HistoryView from './HistoryView';\nimport ShareButton from './ShareButton';\nimport InternalsButton from './InternalsButton';\nimport { serializeRecursive, stageInterface, setInterface, getInterface, getInterfaces, interfaceGetRelativeId, subscribeInterface } from './Util';\n\ntype WindowProps = {\n    ictx : any;\n    id : any;\n    serializedState : any;\n};\n\ntype WindowState = {\n};\n\nfunction makeButton(text, handler) {\n    return <button\n            className=\"btn btn-primary\"\n            tabIndex={-1}\n            onClick={handler}>\n                {text}\n                </button>\n}\n\nclass Window extends Component<WindowProps, WindowState> {\n\n    styles = {\n        width: '40vw',\n        float: 'left',\n        margin: '20px',\n        textAlign: 'left',\n        height: '100%',\n    } as React.CSSProperties;\n\n    historyStyles = {\n        height: '100%',\n        overflow: 'hidden',\n        overflowY: 'auto',\n    } as React.CSSProperties;\n\n    ictx : any;\n    count : number;\n    id : any;\n    serializedState;\n\n    style;\n    horizontalStyle;\n    normalStyle;\n    deserialize;\n    onCloneClick;\n    onCloseClick;\n\n    constructor(args) {\n        super(args);\n        this.state = {};\n        this.style = args.horizontal ?\n            this.horizontalStyle : this.normalStyle;\n        this.ictx = args.ictx;\n        this.count = args.count;\n        this.id = args.id;\n\n        this.serializedState = args.serializedState || {};\n\n        this.deserialize = (ctx) => {\n            const id: any = interfaceGetRelativeId(this.ictx, ctx, false);\n            return this.serializedState[id];\n        };\n        subscribeInterface('deserialize-state', this.deserialize, this.ictx);\n\n        const addWindow = getInterface('add-window', this.ictx);\n        const removeWindow = getInterface('remove-window', this.ictx);\n        const serialize = getInterfaces('serialize-state', this.ictx, false);\n\n        const serializeThis = serializeRecursive(this.ictx, serialize);\n        subscribeInterface('serialize-state',\n                           serializeThis,\n                           this.ictx);\n        setInterface('serialize-window',\n                     serializeThis,\n                     this.ictx);\n\n        this.onCloneClick = (e) => {\n            const serialized = serializeThis();\n            addWindow(serialized);\n        };\n        this.onCloseClick = (e) => {\n            removeWindow();\n        };\n    }\n\n    render() {\n        return (<div style={this.styles}>\n                    <div className=\"btn-group d-flex\" role='group' >\n                        {makeButton('Close', this.onCloseClick)}\n                        <InternalsButton ictx={stageInterface(this.ictx)} id={this.id + ':InternalsButton'} />\n                        <ShareButton ictx={stageInterface(this.ictx)} />\n                        {makeButton('Clone', this.onCloneClick)}\n                    </div>\n                    <div style={this.historyStyles}>\n                        <HistoryView ictx={stageInterface(this.ictx)} id={this.id + ':HistoryView'}/>\n                        <ConsoleInput ictx={stageInterface(this.ictx)} />\n                    </div>\n                </div>\n               );\n    }\n}\n\nexport default Window;\n\n\n","import React, { Component } from 'react';\nimport Window from './Window';\nimport { getLocationQueryArg, stageInterface, getInterface, subscribeInterface } from './Util';\n\ntype DesktopProps = {\n    ictx : any;\n};\n\ntype DesktopState = {\n    count : number;\n    indexes : Array<any>;\n};\n\nclass Desktop extends Component<DesktopProps, DesktopState> {\n\n    styles = {\n        display: 'inline-flex',\n        height: '90%',\n    };\n\n    ictx : any;\n    id : any;\n    mounted : boolean;\n    windows;\n    initWindow;\n    addWindow;\n    state : DesktopState;\n\n    constructor(args) {\n        super(args);\n        this.ictx = args.ictx;\n        this.id = args.id;\n        this.mounted = false;\n\n        this.state = { count: 0, indexes: [] };\n        this.windows = [];\n\n        const showIntro = getInterface('intro-show', null);\n        const onEmptyDesktop = () => {\n            showIntro();\n            this.addWindow(null)(null);\n        };\n\n        this.initWindow = (parentCount, count) => (windowSerializedState) => {\n            const id = this.id + 'DesktopWindow#' + count;\n            const window = {\n                ictx: null,\n                serializedState: windowSerializedState,\n                id: id,\n                key: id,\n                count: count};\n            const ictx = stageInterface(this.ictx);\n            window.ictx = ictx;\n\n            subscribeInterface('add-window', this.addWindow(count), ictx);\n\n            const removeWindow = () => {\n                const newWindows = this.windows.filter((win) => win.count !== count);\n                console.log('removing window: ', window.id, 'new:', newWindows);\n                this.windows = newWindows;\n                this.setState(s => ({ ...s, indexes: s.indexes.filter(i => i !== count)}));\n                if (newWindows.length === 0) {\n                    onEmptyDesktop();\n                }\n            };\n            subscribeInterface('remove-window', removeWindow, ictx);\n\n            var newWindows;\n            if (parentCount === null) {\n                newWindows = [...this.windows, window];\n            } else {\n                newWindows = [];\n                for (const w of this.windows) {\n                    newWindows.push(w);\n                    if (w.count === parentCount) {\n                        newWindows.push(window);\n                    }\n                }\n            }\n\n            this.windows = newWindows;\n        };\n\n        this.addWindow = (parentCount) => (windowSerializedState) => {\n            var repeat : boolean | null = null;\n            var count : number | undefined = undefined;\n            const update = (state) => {\n                if (repeat === null) {\n                    repeat = true;\n                    count = state.count + 1;\n                    this.initWindow(parentCount, count)(windowSerializedState);\n                }\n                return { count: count, indexes: [ ...state.indexes, [parentCount, count] ] };\n            }\n            if (this.mounted) {\n                this.setState(update);\n            } else {\n                this.state = update(this.state);\n            }\n        };\n\n        const finish_init = async () => {\n            var st;\n            const key = getLocationQueryArg('load');\n            if (key) {\n                const load = getInterface('load', null);\n                st = await load(key);\n                console.log('loading from state:', st);\n            } else {\n                st = null;\n            }\n\n            this.addWindow(null)(st);\n        }\n        finish_init();\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n    }\n\n    render() {\n        const mapper = (w) => {\n            return <Window key={w.id} id={w.id} serializedState={w.serializedState} ictx={w.ictx}/>;\n        };\n        const windows = this.windows.map(mapper);\n        return (\n                <div style={this.styles}>\n                    {windows}\n                </div>\n        );\n    }\n}\n\nexport default Desktop;\n","import React, { Component } from 'react';\nimport { getLocationQueryArg, subscribeInterface } from './Util';\n\ntype Props = {\n};\n\ntype State = {\n    visible: boolean;\n};\n\nclass Intro extends Component<Props, State> {\n\n    mounted : boolean;\n\n    constructor(args) {\n        super(args);\n\n        const startAsVisible = getLocationQueryArg('load') ? false : true;\n        this.state = {\n            visible: startAsVisible,\n        };\n\n        const visibility = (q) => () => {\n            if (q === this.state.visible) { return; }\n            const update = (state) => ({...state, visible: q });\n            if (this.mounted) {\n                this.setState(update);\n            } else {\n                this.state = update(this.state);\n            }\n        };\n        subscribeInterface('server-calc', visibility(false));\n        subscribeInterface('intro-show', visibility(true));\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n    }\n\n    examples = [\n        \"2 + 2 * 2\",\n        \"2 ^ 77\",\n        \"1 << 77\",\n        \"base 2 (1 << 77)\",\n        \"0001#2 + 100101#2\",\n        \"FF00AA#16 + 100101#2\",\n        \"0100#2 | 1001#2\",\n        \"digits 100 pi\",\n    ];\n    mapped = this.examples.map(w => <React.Fragment key={w}> Try <code> {w} </code> <br></br> </React.Fragment>);\n\n    render() {\n        if (!this.state.visible) {\n            return null;\n        } else {\n            return (<React.Fragment>\n                        <img src={\"big-logo.png\"} alt=\"Logo\" />\n                        <p> This is <a href=\"https://github.com/Donaim/hacalc\" >Hacalc</a> - a calculator based on term rewriting </p>\n                        <p> {this.mapped} </p>\n                    </React.Fragment>);\n        }\n    }\n}\n\nexport default Intro;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Desktop from './Desktop';\nimport Intro from './Intro';\nimport { stageInterface, subscribeInterface } from './Util';\n\nclass App extends Component {\n\n    styles = { height: '90vh' };\n\n    innerStyles = { marginTop: 'auto',\n                    marginBottom: 'auto',\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                    height: '90%',\n                  };\n\n    ictx : any;\n    state;\n    serialize;\n\n    constructor(props) {\n        super(props);\n\n        this.ictx = stageInterface(null);\n        this.state = null;\n        this.serialize = () => null;\n        subscribeInterface('serialize-state',\n                           this.serialize,\n                           this.ictx);\n    }\n\n    render() {\n        console.log(\"rendering app!\");\n        return (\n            <div className=\"App-header\" style={this.styles}>\n                <Intro />\n                <div style={this.innerStyles}>\n                    <Desktop ictx={this.ictx} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { serverHandlerInit } from './ServerHandler';\n\nserverHandlerInit();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}